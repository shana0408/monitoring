{"version":3,"sources":["../../../src/components/snaptask/snaptask_list.js"],"names":["slugify","str","slug","replace","SnapTaskListCtrl","$scope","$injector","backendSrv","alertSrv","pageReady","tasks","getTasks","self","get","metric","then","resp","body","task","delete","id","meta","code","set","enabled","put","name","substring","type","getType","config","jobName","zone","templateUrl"],"mappings":"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","file":"snaptask_list.js","sourcesContent":["\nfunction slugify(str) {\n  var slug = str.replace(\"@\", \"at\").replace(\"&\", \"and\").replace(\".\", \"_\").replace(\"/\\W+/\", \"\");\n  return slug;\n}\n\nclass SnapTaskListCtrl {\n  constructor($scope, $injector, backendSrv, alertSrv) {\n    this.backendSrv = backendSrv;\n    this.alertSrv = alertSrv;\n    this.pageReady = false;\n    this.tasks = [];\n\n    this.getTasks();\n  }\n\n  getTasks() {\n    var self = this;\n    return this.backendSrv.get(\"api/plugin-proxy/ns1-app/tasks\", {metric: \"/raintank/apps/ns1/*\"})\n    .then((resp) => {\n      self.tasks = resp.body;\n      self.pageReady = true;\n    });\n  }\n\n  removeTask(task) {\n    var self = this;\n    return this.backendSrv.delete(\"api/plugin-proxy/ns1-app/tasks/\"+task.id).then((resp) => {\n      if (resp.meta.code !== 200) {\n        self.alertSrv.set(\"failed to delete task\", resp, 'error', 10000);\n      }\n      self.getTasks();\n    });\n  }\n\n  stopTask(task) {\n    var self = this;\n    task.enabled = false;\n    return this.backendSrv.put(\"api/plugin-proxy/ns1-app/tasks\", task).then((resp) => {\n      if (resp.meta.code !== 200) {\n        self.alertSrv.set(\"failed to stop task\", resp, 'error', 10000);\n        self.getTasks();\n      }\n    });\n  }\n  startTask(task) {\n    var self = this;\n    task.enabled = true;\n    return this.backendSrv.put(\"api/plugin-proxy/ns1-app/tasks\", task).then((resp) => {\n      if (resp.meta.code !== 200) {\n        self.alertSrv.set(\"failed to start task\", resp, 'error', 10000);\n        self.getTasks();\n      }\n    });\n  }\n\n  getType(task) {\n    if (task.name.substring(0,14) === \"ns1-monitoring\") {\n      return \"monitoringJob\";\n    }\n    if (task.name.substring(0,8) === \"ns1-zone\") {\n      return \"zone\";\n    }\n    return \"\";\n  }\n\n  taskDashboard(task) {\n    var type =this.getType(task);\n    if (type === \"monitoringJob\") {\n      return \"dashboard/db/ns1-monitors?&var-monitor=\" + slugify(task.config['/raintank/apps/ns1'].jobName);\n    } else if (type === \"zone\") {\n      return \"dashboard/db/ns1-zones?&var-zone=\" + slugify(task.config['/raintank/apps/ns1'].zone);\n    }\n  }\n\n  taskLabel(task) {\n    var type =this.getType(task);\n    if (type === \"monitoringJob\") {\n      return \"Monitoring Job: \"+ task.config['/raintank/apps/ns1'].jobName;\n    } else if (type === \"zone\") {\n      return \"Zone: \"+ task.config['/raintank/apps/ns1'].zone;\n    }\n  }\n}\n\nSnapTaskListCtrl.templateUrl = 'public/plugins/ns1-app/components/snaptask/partials/snaptask_list.html';\nexport {SnapTaskListCtrl};\n"]}