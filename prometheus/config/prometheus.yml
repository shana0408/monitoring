# my global config
global:
  scrape_interval:     300s # Set the scrape interval to every 15 seconds. Default is every 1 minute.
  evaluation_interval: 60s # Evaluate rules every 15 seconds. The default is every 1 minute.
  # scrape_timeout is set to the global default (10s).

# Alertmanager configuration
alerting:
  alertmanagers:
  - static_configs:
    - targets:
      # - alertmanager:9093

# Load rules once and periodically evaluate them according to the global 'evaluation_interval'.
rule_files:
    - "prometheus_rules.yml"
  # - "first_rules.yml"
  # - "second_rules.yml"

# A scrape configuration containing exactly one endpoint to scrape:
# Here it's Prometheus itself.
scrape_configs:
  # The job name is added as a label `job=<job_name>` to any timeseries scraped from this config.
  - job_name: 'hardware'

    # metrics_path defaults to '/metrics'
    # scheme defaults to 'http'.

#    static_configs:
 #   - targets: ['localhost:9090']

    file_sd_configs:
        - files:
          - targets.json
    relabel_configs:
        #rename hostname
          - source_labels: [__address__]
            target_label: hostname
            replacement: $1
        #rename _address_ become <hostname>:<port>
          - source_labels: [__address__, node_exporter_port]
            separator:     ';'
            regex: '(.*);(.*)'
            target_label: __address__
            replacement: ${1}:${2}
          - source_labels: [hostname]
            regex: '9100'
            action: drop

  - job_name: 'temperature'

    # metrics_path defaults to '/metrics'
    # scheme defaults to 'http'.
    metrics_path: /

#    static_configs:
 #   - targets: ['localhost:9090']

    file_sd_configs:
        - files:
          - targets.json
    relabel_configs:
        #rename hostname
          - source_labels: [__address__]
            target_label: hostname
            replacement: $1
        #rename _address_ become <hostname>:<port>
          - source_labels: [__address__, temperature_exporter_port]
            separator:     ';'
            regex: '(.*);(.*)'
            target_label: __address__
            replacement: ${1}:${2}
          - source_labels: [hostname]
            regex: '8999'
            action: drop
